knit_theme$set(thm)
options(digits=3)
options(width=80)
x[c(-2,4)]
x <- c(2.1, 4.2, 3.3, 5.4)
x[c(-2,4)]
x <- list(a=c(5:9),b=c(TRUE,FALSE,FALSE,TRUE), c=list("four","five"))
x
x[2]
x["b"]
class(x[1])
class(x["a"])
class(x$a)
df <- data.frame(ID = 1:4,
Color = c("red","white","red",NA),
Passed = c(T,T,T,F))
str(df)
df[c("ID","Color")]
str(df[c("ID","Color")])
str(df[c(,"ID","Color")])
str(df[c(,"ID","Color")])
str(df[,c("ID","Color")])
str(df[,c("ID","Color)])
str(df[,c("ID")])
str(df[c("ID")])
mtcars
mtcars[mtcars$cyl = 4, ]
author("3 - Control structures")
library(slidify)
library(slidifyLibraries)
library(rmarkdown)
library(knitr)
author("3 - Control structures")
author("4 - User-written functions")
library(slidify)
library(slidifyLibraries)
library(rmarkdown)
library(knitr)
setwd("./R_lectures")
author("4 - User-written functions")
author("3 - Control structures")
getwd()
install.packages("rCharts")
formals(lm)
formals(plot)
formas(lm)
formals(lm)
names(formals(lm))
names(formals(sum))
names(formals(mean))
names(formals(sd))
names(formals(plot))
names(formals(rnorm)) #argument names of plot function
plot(x=1:20, y= exp(1:20))
plot(1:20,exp(1:20))
plot(1:20,exp(1:20))
plot(x=1:20, y= exp(1:20))
plot(y = exp(1:20),x = 1:20)
plot(y = log(1:20),x = 1:20)
log(1)
formals(par)
plot(y = log(1:20),x = 1:20, pch=18)
```
names(formals(plot)) #argument names of rnorm function
formals(plot)
plot(y = log(1:20),x = 1:20)
names(formals(median)) #argument names of rnorm function
names(formals(plot)) #argument names of rnorm function
plot(1:20,log(1:20))
plot(x = 1:20, y = log(1:20))
args(plot) #argument names of rnorm function
args(lm)
args(plot) #argument names of plot function
days <- c("Monday","Tuesday","Wendsday","Thursday","Friday")
warnings
warnings()
days <- c("Monday","Tuesday","Wendsday","Thursday","Friday")
weekdays
weekdays <- c("Monday","Tuesday","Wednesday","Thursday","Friday")
weekdays
range(weekdays)
seq_along(weekdays)
a <- 1
a <- 1
for(i in 1:3){
a <- a*i
}
print(a)
as.Date("2015-10-01")
x <- rnorm(100)
x <- rnorm(100)
x
if(x>100){}
ifelse(x>100,1,0)
x <- rnorm(n = 1000, mean = 1, sd = 3)
set.seed(123) #Set the seed for the random number generation
x <- rnorm(n = 1000, mean = 1, sd = 3)
set.seed(123) #Set the seed for the random number generation
x <- rnorm(n = 1000, mean = 1, sd = 3)
x
sum(x<=0)
acdata$use
acdata$use
acdata <- read.csv("COL PA MARA.csv")
setwd("C:/Users/Manuel/Dropbox/1. Mis documentos/1. Medicina/R course/data")
acdata <- read.csv("COL PA MARA.csv")
acdata$use
acdata$use=="B"
acdata$valdays
acdata[acdata$valdays <= 5]
mod <- lm(mpg ~ wt, data = mtcars)
mod <- lm(mpg ~ wt, data = mtcars)
mod$df.residual
mtcars  %>% head
str(mtcars)
str(mod)
str(summary(mod))
acdata
ifelse(acdata$valdays >= 4,1,0)
ifelse(acdata$valdays >= 4 | acdata$valwkend >=1,1,0)
sum(ifelse(acdata$valdays >= 4 | acdata$valwkend >=1,1,0))
sum(ifelse(acdata$valdays >= 4,1,0))
sum(ifelse(acdata$valdays >= 4 & acdata$valwkend >=1,1,0))
ifelse(acdata$valdays >= 4 & acdata$valwkend >=1,"valid",0)
install.packages("xtable")
library(xtable)
tab <- data.frame(Operator=c('<','<=','>','>=','==','!=','!x','x | y','x & y'),Description=c('less than
','less than or equal to','greater than','greater than or equal to','exactly equal to','not equal to','Not x','x OR y','x AND y'))
rownames(tab)<- NULL
tab
length()
length(a)
getwd()
getwd()
setwd("./R_lectures")
getwd()
dir()
author("5 - Built-in functions")
library(slidify)
library(slidifyLibraries)
library(rmarkdown)
library(knitr)
author("5 - Built-in functions")
vignette()
vignette(summary)
vignette("summary")
ozone
data(ozone)
datamtcars
data(mtcars)
summary(mtcars)
str(mtcars)
table(mtcars$cyl,mtcars$hp)
str(mtcars)
table(mtcars$cyl,mtcars$am)
??apply
library(help = "base"
)
data(cars)
cars
data(mtcars)
lapply(mtcars,mean)
args(lapply)
sd
?summary
str(summary(mtcars))
lapply(mtcars,mean)
sapply(mtcars,mean)
args(sapply)
sapply(mtcars,mean,simplify = F)
ind <- list(c(1, 2, 2), c("A", "A", "B"))
ind
table(ind)
n <- 17; fac <- factor(rep(1:3, length = n), levels = 1:5)
fac
table(fac)
tapply(1:n, fac, sum)
tapply(1:n, fac, count)
tapply(1:n, fac, n)
tapply(1:n, fac)
tapply(1:n, fac,mean)
args(apply)
apply(mtcars, 2, mean)
apply(mtcars, 2, sort)
```
x <- cbind(x1 = 3, x2 = c(4:1, 2:5))
x
cave <- function(x, c1, c2) c(mean(x[c1]), mean(x[c2]))
apply(x, 1, cave,  c1 = "x1", c2 = c("x1","x2"))
x <- cbind(x1 = 3, x2 = c(4:1, 2:5))
x
apply(x, 1, function(y) y^3+5)
apply(x, 1, function(y) y+5)
apply(x, 2, function(y) y+5)
apply(x, c(1,2), sum)
tapply(mtcars$wt, mtcars$cyl, mean)
barplot(tapply(mtcars$wt, mtcars$cyl, mean))
plot(tapply(mtcars$wt, mtcars$cyl, mean))
barplot(tapply(mtcars$wt, mtcars$cyl, mean))
f <- function(x){}
f <- function(x){return(mean(x),sd(x),min(x),max(x))}
f
f(mtcars$wt)
f
f(mtcars$wt)
f <- function(x){return(c(mean(x),sd(x),min(x),max(x)))}
f
f(mtcars$wt)
tapply(mtcars$wt, mtcars$cyl, f)
as.data.frame(tapply(mtcars$wt, mtcars$cyl, f))
sapply(mtcars,f)
sapply(mtcars$vs,f)
sapply(mtcars[["vs"]],f)
sapply(mtcars["vs"],f)
f(mtcars$vs)
tapply(mtcars$wt, mtcars$cyl, mean)
tapply(mtcars$wt, list(mtcars$cyl,mtcars$am), mean)
tapply(mtcars$wt, list(mtcars$cyl,mtcars$carb), mean)
tapply(mtcars$wt, list(mtcars$cyl,mtcars$carb), mean,na.rm=T)
tapply(mtcars$wt, list(mtcars$cyl,mtcars$carb), mean,rm.na=T)
```
tapply(mtcars$wt, list(mtcars$cyl,mtcars$carb), mean,rm.na=T)
sapply(mtcars,f)
tapply(mtcars$wt,mtcars$cyl,f)
read.csv("./hw/hw1_data.csv")
df <- read.csv("./hw/hw1_data.csv")
df <- read.csv("./hw/hw1_data.csv")
names(df)
tail(df)
tail(df)
df$Ozone[47]
sum(is.na(df$Ozone))
mean(df$Ozone)
mean(df$Ozone,rm.na=T)
mean(df$Ozone,na.rm = T)
subset(df, Ozone>31 & Temp > 90)
sb <- subset(df, Ozone>31 & Temp > 90)
mean(sb$Solar.R)
mean(df[df$Month==6,"Temp"])
max(df[df$Month==5,"Ozone"])
max(df[df$Month==5,"Ozone"],na.rm=T)
tapply(df$Temp, df$Month, mean)
names(df)
str(df)
tapply(df$Temp, list(df$Month,df$Day), mean)
tapply(df$Temp, list(df$Month,df$Day), max)
author("6 - Data wrangling")
library(slidify)
library(slidifyLibraries)
library(rmarkdown)
library(knitr)
author("6 - Data wrangling")
vignette(dyplr)
library(dplyr)
vignette(dyplr)
browseVignettes(package = "dplyr")
libary(dplyr)
data(nycflights13)
data(flights)
library(nycflights13)
install.packages("nycflights13")
# Chunk 1: setup
# This is an R setup chunk, containing default options applied to all other chunks
library(knitr)
# This sets the chunk default options
opts_chunk$set(cache=TRUE, collapse=TRUE, error=FALSE, prompt=TRUE)
# This sets the chunk display theme
thm <- knit_theme$get("acid")
knit_theme$set(thm)
# This sets some display options
options(digits=3)
options(width=80)
library(nycflights13)
data(weather)
data(planes)
data(airports)
str(flights)
dim(flights)
args(filter)
data(mtcars)
cars <- tbl_df(mtcars)
cars
str(flights)
select(flights, arr_delay, dep_delay)
select(flights, arr_delay:dep_delay)
arrange(df, color)
df
df <- data.frame(
color = c("blue", "black", "blue", "blue", "black"),
value = 1:5)
df
arrange(df, color)
arrange(df, value)
```
arrange(df, desc)
arrange(df, color)
arrange(df, desc(value))
arrange(df, color, desc(value))
mutate(df, double = 2 * value)
summarise(df, total = sum(value))
hourly_delay <- flights %>%
filter(!is.na(dep_delay)) %>%
group_by(date, hour) %>%
summarise(delay = mean(dep_delay), n = n())  %>%
filter(n > 10)
flights <- mutate(flights,
date = ISOdate(year, month, day)
)
hourly_delay <- flights %>%
filter(!is.na(dep_delay)) %>%
group_by(date, hour) %>%
summarise(delay = mean(dep_delay), n = n())  %>%
filter(n > 10)
hourly_delay <- filter(
summarise(
group_by(
filter(
flights,
!is.na(dep_delay)
),
date, hour
),
delay = mean(dep_delay),
n = n()
),
n > 10
)
hourly_delay
getwd()
author("6 - Data manipulation")
setwd("./R_lectures")
getwd()
setwd("...")
getwd()
setwd("/...")
getwd()
setwd("C:/Users/Manuel/Dropbox/1. Mis documentos/1. Medicina/R course")
setwd("./R_lectures")
author("6 - Data manipulation")
getwd()
author("7 - Data manipulation II")
library(slidify)
library(slidifyLibraries)
library(rmarkdown)
library(knitr)
author("7 - Data manipulation II")
author("7 - Exercises")
library(slidify)
library(slidifyLibraries)
library(rmarkdown)
library(knitr)
author("7 - Exercises data manipulation")
setwd("C:/Users/Manuel/Dropbox/1. Mis documentos/1. Medicina/R course/R_lectures")
author("6 - Exercises data manipulation")
muevete <- read_excel("C:/Users/Manuel/Dropbox/1. Mis documentos/1. Medicina/R course/data/muevete_baseline.xls")
# ¿Cuál es el estrato con el menor promedio de peso?
library(dplyr)
library(readxl)
muevete <- read_excel("C:/Users/Manuel/Dropbox/1. Mis documentos/1. Medicina/R course/data/muevete_baseline.xls")
install.packages("readxl")
library(dplyr)
library(readxl)
muevete <- read_excel("C:/Users/Manuel/Dropbox/1. Mis documentos/1. Medicina/R course/data/muevete_baseline.xls")
# ¿Cuál es el estrato con el menor promedio de peso?
muevete %>%
select(ESTRATO_0, PESO1_0) %>%
mutate(PESO1_0 = as.numeric(PESO1_0)) %>%
filter(!is.na(PESO1_0)) %>%
group_by(ESTRATO_0) %>%
summarise(meanPeso = mean(PESO1_0), count = n())
# Chunk 1: setup
# This is an R setup chunk, containing default options applied to all other chunks
library(knitr)
# This sets the chunk default options
opts_chunk$set(cache=TRUE, collapse=TRUE, error=FALSE, prompt=TRUE)
# This sets the chunk display theme
thm <- knit_theme$get("acid")
knit_theme$set(thm)
# This sets some display options
options(digits=3)
options(width=80)
muevete$ID_0
muevete$ID_0 %>% write_c
muevete$ID_0 %>% write.csv("clipboard",row.names = F)
read_csv("C:/Users/Manuel/Dropbox/1. Mis documentos/1. Medicina/R course/data/COL PA MARA.csv")
library(readr)
read_csv("C:/Users/Manuel/Dropbox/1. Mis documentos/1. Medicina/R course/data/COL PA MARA.csv")
```
pa <- read_csv("C:/Users/Manuel/Dropbox/1. Mis documentos/1. Medicina/R course/data/COL PA MARA.csv")
```
pa <- read_csv("C:/Users/Manuel/Dropbox/1. Mis documentos/1. Medicina/R course/data/COL PA MARA.csv")
pa
pa %>% select(PID, WKDAYmean_mv_EV)
pa %>% select(PID, WKDAYmean_mv_EV) %>%
mutate(PID = as.character(PID))
names(muevete)
pa %>% select(PID, WKDAYmean_mv_EV) %>%
mutate(PID = as.character(PID)) %>%
inner_join(muevete, by=c("PID" == "ID_0"))
pa %>% select(PID, WKDAYmean_mv_EV) %>%
mutate(PID = as.character(PID)) %>%
inner_join(muevete, by=c("PID" = "ID_0"))
pa %>% select(PID, WKDAYmean_mv_EV) %>%
mutate(PID = as.character(PID)) %>%
inner_join(muevete, by=c("PID" = "ID_0")) %>%
select(PID, WKDAYmean_mv_EV, EDAD = EDAD_00)
names(muevete)
pa %>% select(PID, WKDAYmean_mv_EV) %>%
mutate(PID = as.character(PID)) %>%
inner_join(muevete, by=c("PID" = "ID_0")) %>%
select(PID, WKDAYmean_mv_EV, EDAD = EDAD_00,
FECHA_NACIM_0)
library(lubridate)
pa %>% select(PID, WKDAYmean_mv_EV) %>%
mutate(PID = as.character(PID)) %>%
inner_join(muevete, by=c("PID" = "ID_0")) %>%
select(PID, WKDAYmean_mv_EV, EDAD = EDAD_00,
FECHA_NACIM_0) %>%
mutate(FECHA_NACIM_0 = dmy(FECHA_NACIM_0))
pa %>% select(PID, WKDAYmean_mv_EV) %>%
mutate(PID = as.character(PID)) %>%
inner_join(muevete, by=c("PID" = "ID_0")) %>%
select(PID, WKDAYmean_mv_EV, EDAD = EDAD_00,
FECHA_NACIM_0) %>%
mutate(FECHA_NACIM_0 = mdy(FECHA_NACIM_0))
pa %>% select(PID, WKDAYmean_mv_EV) %>%
mutate(PID = as.character(PID)) %>%
inner_join(muevete, by=c("PID" = "ID_0")) %>%
select(PID, WKDAYmean_mv_EV, EDAD = EDAD_00,
FECHA_NACIM_0) %>%
mutate(FECHA_NACIM_0 = mdy(FECHA_NACIM_0),
sem = month(FECHA_NACIM_0))
pa %>% select(PID, WKDAYmean_mv_EV) %>%
mutate(PID = as.character(PID)) %>%
inner_join(muevete, by=c("PID" = "ID_0")) %>%
select(PID, WKDAYmean_mv_EV, EDAD = EDAD_00,
FECHA_NACIM_0) %>%
mutate(FECHA_NACIM_0 = mdy(FECHA_NACIM_0),
sem = month(FECHA_NACIM_0)<=6)
pa %>% select(PID, WKDAYmean_mv_EV) %>%
mutate(PID = as.character(PID)) %>%
inner_join(muevete, by=c("PID" = "ID_0")) %>%
select(PID, WKDAYmean_mv_EV, EDAD = EDAD_00,
FECHA_NACIM_0) %>%
mutate(FECHA_NACIM_0 = mdy(FECHA_NACIM_0),
sem = 1*(month(FECHA_NACIM_0)<=6))
pa %>% mutate(PID = as.character(PID)) %>%
inner_join(muevete, by=c("PID" = "ID_0")) %>%
select(PID, WKDAYmean_mv_EV, EDAD = EDAD_00,
FECHA_NACIM_0) %>%
mutate(FECHA_NACIM_0 = mdy(FECHA_NACIM_0),
sem = 1*(month(FECHA_NACIM_0)<=6))
pa %>% mutate(PID = as.character(PID)) %>%
inner_join(muevete, by=c("PID" = "ID_0"))
pa
muevete
pa
pa <- read_csv("C:/Users/Manuel/Dropbox/1. Mis documentos/1. Medicina/R course/data/COL PA MARA.csv")
pa
pa %>%
inner_join(muevete, by=c("PID" = "ID_0"))
pa %>%
inner_join(muevete, by=c("PID" = "ID_0")) %>%
select(PID, WKDAYmean_mv_EV, EDAD = EDAD_00,
FECHA_NACIM_0)
pa %>%
inner_join(muevete, by=c("PID" = "ID_0")) %>%
select(PID, WKDAYmean_mv_EV, EDAD = EDAD_00,
FECHA_NACIM_0) %>%
mutate(FECHA_NACIM_0 = mdy(FECHA_NACIM_0),
sem = 1*(month(FECHA_NACIM_0)<=6))
pa %>%
inner_join(muevete, by=c("PID" = "ID_0")) %>%
select(PID, WKDAYmean_mv_EV, EDAD = EDAD_00,
FECHA_NACIM_0) %>%
mutate(FECHA_NACIM_0 = mdy(FECHA_NACIM_0),
H1 = 1*(month(FECHA_NACIM_0)<=6))
pa %>%
inner_join(muevete, by=c("PID" = "ID_0")) %>%
select(PID, WKDAYmean_mv_EV, EDAD = EDAD_00,
FECHA_NACIM_0) %>%
mutate(FECHA_NACIM_0 = mdy(FECHA_NACIM_0),
H1 = 1*(month(FECHA_NACIM_0)<=6)) %>%
group_by(H1, EDAD) %>%
summarise(meanMVPA = mean(WKDAYmean_mv_EV))
pa %>%
inner_join(muevete, by=c("PID" = "ID_0")) %>%
select(PID, WKDAYmean_mv_EV, EDAD = EDAD_00,
FECHA_NACIM_0) %>%
mutate(FECHA_NACIM_0 = mdy(FECHA_NACIM_0),
H1 = 1*(month(FECHA_NACIM_0)<=6)) %>%
group_by(H1, EDAD) %>%
summarise(meanMVPA = mean(WKDAYmean_mv_EV, na.rm =T))
pa %>%
inner_join(muevete, by=c("PID" = "ID_0")) %>%
select(PID, WKDAYmean_mv_EV, EDAD = EDAD_00,
FECHA_NACIM_0) %>%
mutate(FECHA_NACIM_0 = mdy(FECHA_NACIM_0),
H1 = 1*(month(FECHA_NACIM_0)<=6)) %>%
group_by(EDAD, H1) %>%
summarise(meanMVPA = mean(WKDAYmean_mv_EV, na.rm =T))
pa %>%
inner_join(muevete, by=c("PID" = "ID_0")) %>%
select(PID, WKDAYmean_mv_EV, EDAD = EDAD_00,
FECHA_NACIM_0) %>%
mutate(FECHA_NACIM_0 = mdy(FECHA_NACIM_0),
H1 = 1*(month(FECHA_NACIM_0)<=6)) %>%
group_by(EDAD, H1) %>%
summarise(meanMVPA = mean(WKDAYmean_mv_EV, na.rm =T),
count = n())
?lubridate
+ Use the appropiate two table verb to combine both tables.
