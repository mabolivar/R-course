plot(x =  mtcars$mpg, y = mtcars$wt)
par(omi)
par(oma)
par("oma")
par("omi")
par("par")
par("mar")
par("pch")
plot(x =  mtcars$wt, y = mtcars$mpg, pch = 19)
plot(x =  mtcars$wt, y = mtcars$mpg,
pch = 19, col = 2, main = "Title"
xlab = "Weight", ylab = "Miles per gallon")
plot(x =  mtcars$wt, y = mtcars$mpg,
pch = 19, col = 2, main = "Title",
xlab = "Weight", ylab = "Miles per gallon")
par(mar=c(5.1, 4.1, 2.1, 2.1))
plot(x =  mtcars$wt,
y = mtcars$mpg,
pch = 19, col = 2,
main = "Cars performance based on weight",
xlab = "Weight", ylab = "Miles per gallon")
grid(lwd = 2)
lm1 <- lm(mpg ~ wt, data = mtcars)
abline(lm1, col = "blue", lwd = 2)
library(ggplot2)
qplot(x =  mtcars$wt, y = mtcars$mpg)
plot(mtcars$mpg)
hist(mtcars$mpg)
hist(mtcars$mpg, col ="gray")
plot(mtcars$wt, mtcars$mpg, type = "l")
plot(mtcars$wt, mtcars$mpg, type = "l", lwd = 2)
barplot(mtcars$mpg)
barplot(mtcars$mpg, mtcars$am)
barplot(mtcars$mpg, as.factor(mtcars$am))
table(mtcars$mpg,mtcars$am)
barplot(counts)
counts <- table(mtcars$mpg,mtcars$am)
barplot(counts)
counts <- table(mtcars$cyl,mtcars$am)
barplot(counts)
counts <- table(mtcars$cyl)
barplot(counts)
counts <- table(mtcars$cyl,mtcars$am)
barplot(counts)
counts <- table(mtcars$am,mtcars$cyl)
barplot(counts)
counts <- table(mtcars$am,mtcars$cyl, col = c("blue", "red"))
barplot(counts)
counts <- table(mtcars$am,mtcars$cyl)
barplot(counts, col = c("blue", "red"))
mtcars[sort(mtcars$mpg),]
mtcars <- mtcars[sort(mtcars$mpg),]
plot(mtcars$wt, mtcars$mpg, type = "l", lwd = 2)
plot(mtcars$wt, mtcars$mpg, type = "l", lwd = 2)
mtcars <- mtcars[sort(mtcars$wt),]
plot(mtcars$wt, mtcars$mpg, type = "l", lwd = 2)
qplot(data=mtcars, wt)
qplot(data=mtcars, wt)
library(ggplot2)
qplot(data=mtcars, wt)
qplot(data=mtcars, mpg)
qplot(data=mtcars, mpg, binwidth = 0.1)
qplot(data=mtcars, mpg, binwidth = 0.01)
qplot(data=mtcars, cyl)
table(mtcars$am,mtcars$cyl) %>% as.data.frame
library(dplyr)
counts <- table(mtcars$am,mtcars$cyl) %>% as.data.frame
counts
table(mtcars$am,mtcars$cyl)
counts <- table(mtcars$am,mtcars$cyl) %>% data.frame
counts
counts <- table(mtcars$am,mtcars$cyl) %>% as.data.frame.matrix
counts
counts
counts <- table(mtcars$am,mtcars$cyl) %>% as.data.frame.tbl
counts <- table(mtcars$am,mtcars$cyl) %>% as.data.frame.table
counts
counts <- table(mtcars$am,mtcars$cyl) %>% as.data.frame.matrix
counts
table(mtcars$am,mtcars$cyl) %>% as.data.frame.matrix
table(mtcars$am,mtcars$cyl) %>% as.data.frame.matrix
table(mtcars$am,mtcars$cyl)
table(mtcars$am,mtcars$cyl)
table(mtcars$am,mtcars$cyl)
table(mtcars$am,mtcars$cyl)
table(mtcars$am,mtcars$cyl)
table(mtcars$am,mtcars$cyl)
mtcars
data(mtcars)
table(mtcars$am,mtcars$cyl) %>% as.data.frame.matrix
qplot(data=counts)
qplot(data=mtcars,mpg)
qplot(data=mtcars,mpg)
# Chunk 1: setup
# This is an R setup chunk, containing default options applied to all other chunks
library(knitr)
# This sets the chunk default options
opts_chunk$set(cache=TRUE, collapse=TRUE, error=FALSE, prompt=TRUE)
# This sets the chunk display theme
thm <- knit_theme$get("acid")
knit_theme$set(thm)
# This sets some display options
options(digits=3)
options(width=80)
# Chunk 3
par(mar=c(5.1, 4.1, 0, 2.1))
plot(x =  mtcars$wt, y = mtcars$mpg)
# Chunk 4
par(mar=c(5.1, 4.1, 0, 2.1))
plot(x =  mtcars$wt,
y = mtcars$mpg,
pch = 19)
# Chunk 6
par(mar=c(5.1, 4.1, 2.1, 2.1))
plot(x =  mtcars$wt,
y = mtcars$mpg,
pch = 19, col = 2,
main = "Cars performance based on weight",
xlab = "Weight", ylab = "Miles per gallon")
# Chunk 8
par(mar=c(5.1, 4.1, 2.1, 2.1))
plot(x =  mtcars$wt,
y = mtcars$mpg,
pch = 19, col = 2,
main = "Cars performance based on weight",
xlab = "Weight", ylab = "Miles per gallon")
grid(lwd = 2)
# Chunk 10
par(mar=c(5.1, 4.1, 2.1, 2.1))
plot(x =  mtcars$wt,
y = mtcars$mpg,
pch = 19, col = 2,
main = "Cars performance based on weight",
xlab = "Weight", ylab = "Miles per gallon")
grid(lwd = 2)
lm1 <- lm(mpg ~ wt, data = mtcars)
abline(lm1, col = "blue", lwd = 2)
# Chunk 12
hist(mtcars$mpg, col ="gray")
# Chunk 13
counts <- table(mtcars$cyl)
barplot(counts)
# Chunk 14
counts <- table(mtcars$am,mtcars$cyl)
barplot(counts, col = c("blue", "red"))
# Chunk 16
mtcars <- mtcars[sort(mtcars$wt),]
plot(mtcars$wt, mtcars$mpg, type = "l", lwd = 2)
# Chunk 18
library(ggplot2)
library(dplyr)
qplot(data = mtcars, x =  wt, y = mpg)
data(mtcars)
qplot(data=mtcars,mpg)
qplot(mtcars$wt, mtcars$mpg, geom = "line")
mtcars <- mtcars[sort(mtcars$wt),]
qplot(mtcars$wt, mtcars$mpg, geom = "line")
mtcars <- mtcars[sort(mtcars$wt),]
qplot(mtcars$wt, mtcars$mpg, geom = "line")
mtcars <- mtcars[sort(mtcars$wt),]
qplot(mtcars$wt, mtcars$mpg, geom = "line")
mtcars
data(mtcars)
mtcars <- mtcars[sort(mtcars$wt),]
qplot(mtcars$wt, mtcars$mpg, geom = "line")
data(mtcars)
arrange(mtcars,wt)
data(mtcars)
qplot(data=mtcars,mpg)
qplot(data = mtcars, x =  wt, y = mpg)
plot(mtcars$wt, mtcars$mpg, type = "l", lwd = 2)
mtcars <- arrange(mtcars,wt)
plot(mtcars$wt, mtcars$mpg, type = "l", lwd = 2)
qplot(mtcars$wt, mtcars$mpg, geom = "line")
con <- dbConnect(RSQLite::SQLite(),
dbname="C:/Users/Manuel/Dropbox/1. Mis documentos/1. Medicina/R course/data/1109A1_10459_201307181sec.agd")
library(RSQLite)
con <- dbConnect(RSQLite::SQLite(),
dbname="C:/Users/Manuel/Dropbox/1. Mis documentos/1. Medicina/R course/data/1109A1_10459_201307181sec.agd")
dbReadTable(con,"data")
close(con)
dbDisconnect(con)
str(df)
df <- dbReadTable(con,"data") %>% tbl_df()
con <- dbConnect(RSQLite::SQLite(),
dbname="C:/Users/Manuel/Dropbox/1. Mis documentos/1. Medicina/R course/data/1109A1_10459_201307181sec.agd")
df <- dbReadTable(con,"data") %>% tbl_df()
dbDisconnect(con)
df
dbGetQuery(conn=con, statement=paste("SELECT (cast(dataTimestamp as double))*1.0e-7 as datetime, * FROM '", "data", "'", sep="")) %>% tbl_df()
con <- dbConnect(RSQLite::SQLite(),
dbname="C:/Users/Manuel/Dropbox/1. Mis documentos/1. Medicina/R course/data/1109A1_10459_201307181sec.agd")
dbGetQuery(conn=con, statement=paste("SELECT (cast(dataTimestamp as double))*1.0e-7 as datetime, * FROM '", "data", "'", sep="")) %>% tbl_df()
dbDisconnect(con)
dbGetQuery(conn=con, statement=paste("SELECT (cast(dataTimestamp as double))*1.0e-7 as datetime, * FROM '", "data", "'", sep="")) %>% tbl_df() %>% select(-dataTimestamp)
con <- dbConnect(RSQLite::SQLite(),
dbname="C:/Users/Manuel/Dropbox/1. Mis documentos/1. Medicina/R course/data/1109A1_10459_201307181sec.agd")
dbGetQuery(conn=con, statement=paste("SELECT (cast(dataTimestamp as double))*1.0e-7 as datetime, * FROM '", "data", "'", sep="")) %>% tbl_df() %>% select(-dataTimestamp)
dbGetQuery(conn=con, statement=paste("SELECT (cast(dataTimestamp as double))*1.0e-7 as datetime, * FROM '", "data", "'", sep="")) %>% tbl_df() %>% select(-dataTimestamp) %>%
mutate(datetime = datetime-62135596800,
datetime = as.POSIXct(datetime,origin="1970-01-01 00:00:00", "GMT"))
con <- dbConnect(RSQLite::SQLite(),
dbname="C:/Users/Manuel/Dropbox/1. Mis documentos/1. Medicina/R course/data/1109A1_10459_201307181sec.agd")
df <- dbGetQuery(conn=con,
statement=
paste("SELECT (cast(dataTimestamp as double))*1.0e-7 as datetime, *
FROM '","data", "'", sep="")) %>%
select(-dataTimestamp) %>%
mutate(datetime = datetime-62135596800,
datetime = as.POSIXct(datetime,origin="1970-01-01 00:00:00", "GMT"))
dbDisconnect(con)
str(df)
plot(df$datetime,df$axis1)
con <- dbConnect(RSQLite::SQLite(),
dbname="C:/Users/Manuel/Dropbox/1. Mis documentos/1. Medicina/R course/data/A1_0011_01.agd")
df <- dbGetQuery(conn=con,
statement=
paste("SELECT (cast(dataTimestamp as double))*1.0e-7 as datetime, *
FROM '","data", "'", sep="")) %>%
select(-dataTimestamp) %>%
mutate(datetime = datetime-62135596800,
datetime = as.POSIXct(datetime,origin="1970-01-01 00:00:00", "GMT"))
dbDisconnect(con)
plot(df$datetime,df$axis1)
plot(df$datetime,df$axis1, type ="l")
day(datetime)
days(datetime)
library(lubridate)
df$datetime
df$datetime %>% day()
df$datetime %>% days()
df$datetime %>% as.Date
onaday <- df %>% filter(as.Date(datetime) == dmy("10-07-2013"))
dmy("10-07-2013")
onaday <- df %>% filter(as.Date(datetime) == dmy("10-07-2013"))
onaday <- df %>% filter(as.Date(datetime) %in% dmy("10-07-2013"))
onaday
df$datetime %>% as.Date %>% unique()
dmy("10-07-2013")
df %>% filter(as.Date(datetime) %in% dmy("10-07-2013",tz = "UTC"))
datetime
dmy("10-07-2013") %>% str
df$datetime %>% as.Date %>% unique()
onaday <- df %>% filter(as.Date(datetime) %in% ymd("2013-07-1",tz = "UTC"))
onaday
str(as.Date(datetime))
str(as.Date(df$datetime))
onaday <- df %>% filter(datetime %in% ymd("2013-07-1",tz = "UTC"))
onaday
con <- dbConnect(RSQLite::SQLite(),
dbname="C:/Users/Manuel/Dropbox/1. Mis documentos/1. Medicina/R course/data/A1_0011_01.agd")
df <- dbGetQuery(conn=con,
statement=
paste("SELECT (cast(dataTimestamp as double))*1.0e-7 as datetime, *
FROM '","data", "'", sep="")) %>%
select(-dataTimestamp) %>%
mutate(datetime = datetime-62135596800,
datetime = decimal_date(datetime))
yday(df$datetime)
onaday <- df %>% filter(datetime %in% as.Date(ymd("2013-07-1",tz = "UTC")))
plot(df$datetime,df$axis1, type ="l")
onaday
as.Date(ymd("2013-07-1",tz = "UTC")
as.Date(ymd("2013-07-1",tz = "UTC"))
unique(as.Date(datetime))
unique(as.Date(df$datetime))
onaday <- df %>% filter(datetime %in% as.Date(ymd("2013-07-10",tz = "UTC")))
onaday
onaday <- df %>% filter(datetime %in% as.Date(ymd("2013-07-10")))
onaday
onaday <- df %>% filter(as.Date(datetime) %in% as.Date(ymd("2013-07-10")))
onaday
plot(df$datetime,df$axis1, type ="l")
plot(onaday$datetime,onaday$axis1, type ="l")
onaday <- df %>% filter(as.Date(datetime) %in% as.Date(ymd("2013-07-10")) & hour(datetime)>=6)
plot(onaday$datetime,onaday$axis1, type ="l")
onaday <- df %>% filter(as.Date(datetime) %in% as.Date(ymd("2013-07-10")) & hour(datetime)>=6 & hour(datetime)<23)
plot(onaday$datetime,onaday$axis1, type ="l")
onaday <- df %>% filter(as.Date(datetime) %in% as.Date(ymd("2013-07-10")) & hour(datetime)>=6 & hour(datetime)<20)
plot(onaday$datetime,onaday$axis1, type ="l")
onaday <- df %>% filter(as.Date(datetime) %in% as.Date(ymd("2013-07-10")) & hour(datetime)>=6 & hour(datetime)<22)
plot(onaday$datetime,onaday$axis1, type ="l")
onaday <- df %>% filter(as.Date(datetime) %in% as.Date(ymd("2013-07-10")) & hour(datetime)>=6 & hour(datetime)<21)
plot(onaday$datetime,onaday$axis1, type ="l")
qplot(onaday$datetime,onaday$axis1, type ="l")
qplot(onaday$datetime,onaday$axis1)
qplot(onaday$datetime,onaday$axis1, geom = "line")
qplot(onaday$datetime,onaday$axis1, geom = "smooth")
mav <- function(time,values,n=1){
val <- rep(mean(values),length(values))
for(i in seq_along(len)){
if(i<=n){
val[i] <- NA
}
value[i] <- mean(values[i-n:i+n])
}
return(data.frame(time,value))
}
mav <- function(datetime,values,n=1){
val <- rep(mean(values),length(values))
for(i in seq_along(len)){
if(i<=n){
val[i] <- NA
}
value[i] <- mean(values[i-n:i+n])
}
return(data.frame(datetime,value))
}
mav(df$datetime,df$datetime)
mav <- function(datetime,values,n=1){
val <- rep(mean(values),length(values))
for(i in seq_along(datetime)){
if(i<=n){
val[i] <- NA
}
value[i] <- mean(values[i-n:i+n])
}
return(data.frame(datetime,value))
}
mav(df$datetime,df$datetime)
mav <- function(datetime,values,n=1){
value <- rep(mean(values),length(values))
for(i in seq_along(datetime)){
if(i<=n){
value[i] <- NA
}
value[i] <- mean(values[i-n:i+n])
}
return(data.frame(datetime,value))
}
mav(df$datetime,df$datetime)
mav(oneday$datetime,oneday$datetime)
oneday <- df %>% filter(as.Date(datetime) %in% as.Date(ymd("2013-07-10")) & hour(datetime)>=6 & hour(datetime)<21)
plot(onaday$datetime,onaday$axis1, type ="l")
mav(oneday$datetime,oneday$datetime)
mav(oneday$datetime,oneday$datetime)
mav(oneday$datetime,oneday$datetime) %>% str
mav <- function(datetime,values,n=1){
val <- rep(mean(values),length(values))
for(i in seq_along(datetime)){
if(i<=n){
val[i] <- NA
}
val[i] <- mean(values[i-n:i+n])
}
return(data.frame(datetime,val))
}
mav(oneday$datetime,oneday$datetime) %>% str
mav(oneday$datetime,oneday$axis1) %>% str
mav(oneday$datetime,oneday$axis1) %>% plot
mav(oneday$datetime,oneday$axis1) %>% plot(type="l")
oneday <- df %>% filter(as.Date(datetime) %in% as.Date(ymd("2013-07-10")) & hour(datetime)>=6 & hour(datetime)<23)
mav(oneday$datetime,oneday$axis1) %>% plot(type="l")
data.frame(oneday$datetime,oneday$axis1) %>% plot(type="l")
mav <- function(datetime,values,n=1){
val <- rep(0,length(values))
for(i in seq_along(datetime)){
if(i<=n){
val[i] <- NA
}
val[i] <- mean(values[i-n:i+n])
}
return(data.frame(datetime,val))
}
mav(oneday$datetime,oneday$axis1) %>% plot(type="l")
mav(oneday$datetime,oneday$axis1,n=5) %>% plot(type="l")
data.frame(oneday$datetime,oneday$axis1) %>% plot(type="l")
mav(oneday$datetime,oneday$axis1,n=5) %>% plot(type="l")
mav(oneday$datetime,oneday$axis2,n=5) %>% plot(type="l")
mav(oneday$datetime,oneday$axis1,n=5) %>% plot(type="l")
oneday$axis1 -> values
val <- rep(0,length(values))
val
mav <- function(datetime,values,n=1){
val <- rep(0,length(values))
for(i in seq_along(datetime)){
if(i<=n){
val[i] <- NA
}
val[i] <- mean(values[i-n:i+n])
}
return(data_frame(datetime,val,values))
}
mav(oneday$datetime,oneday$axis1,n=1)
mav <- function(datetime,values,n=1){
val <- rep(0,length(values))
for(i in seq_along(datetime)){
if(i<=n){
val[i] <- NA
}
else{
val[i] <- mean(values[i-n:i+n])
}
print(val[i],value[i])
}
return(data_frame(datetime,val))
}
mav(oneday$datetime,oneday$axis1,n=1) %>% plot(type="l")
mav <- function(datetime,values,n=1){
val <- rep(0,length(values))
for(i in seq_along(datetime)){
if(i<=n){
val[i] <- NA
}
else{
val[i] <- mean(values[i-n:i+n])
}
print(val[i],values[i])
}
return(data_frame(datetime,val))
}
mav(oneday$datetime,oneday$axis1,n=1) %>% plot(type="l")
mav <- function(datetime,values,n=1){
val <- rep(0,length(values))
for(i in seq_along(datetime)){
if(i<=n){
val[i] <- NA
}
else{
val[i] <- mean(values[i-n:i+n])
}
print(val[i],values[i])
}
return(data_frame(datetime,val))
}
mav(oneday$datetime,oneday$axis1,n=1) %>% plot(type="l")
mav <- function(datetime,values,n=1){
val <- rep(-1,length(values))
for(i in seq_along(datetime)){
if(i<=n){
val[i] <- NA
}
else{
val[i] <- mean(values[i-n:i+n])
}
print(val[i],values[i])
}
return(data_frame(datetime,val))
}
mav(oneday$datetime,oneday$axis1,n=1) %>% plot(type="l")
mav <- function(datetime,values,n=1){
val <- rep(-1,length(values))
for(i in seq_along(datetime)){
if(i<=n){
val[i] <- NA
}
else{
val[i] <- mean(values[i-n:i+n])
}
cat(val[i]," ",values[i],"\n")
}
return(data_frame(datetime,val))
}
mav(oneday$datetime,oneday$axis1,n=1) %>% plot(type="l")
mav <- function(datetime,values,n=1){
val <- rep(-1,length(values))
for(i in seq_along(datetime)){
if(i<=n){
val[i] <- NA
}
else{
val[i] <- mean(values[(i-n):(i+n)])
}
cat(val[i]," ",values[i],"\n")
}
return(data_frame(datetime,val))
}
mav(oneday$datetime,oneday$axis1,n=1) %>% plot(type="l")
mav(oneday$datetime,oneday$axis1,n=2) %>% plot(type="l")
mav(oneday$datetime,oneday$axis1,n=3) %>% plot(type="l")
mav(oneday$datetime,oneday$axis1,n=3) %>% plot(type="l")
mav(oneday$datetime,oneday$axis1,n=4) %>% plot(type="l")
mav(oneday$datetime,oneday$axis1,n=5) %>% plot(type="l")
mav(oneday$datetime,oneday$axis1,n=6) %>% plot(type="l")
mav(oneday$datetime,oneday$axis1,n=7) %>% plot(type="l")
mav <- function(datetime,values,n=1){
val <- rep(-1,length(values))
for(i in seq_along(datetime)){
val[i] <- mean(values[(i-n):(i+n)])
}
return(data_frame(datetime,val))
}
mav(oneday$datetime,oneday$axis1,n=7) %>% plot(type="l")
mav <- function(datetime,values,n=1){
val <- rep(-1,length(values))
for(i in seq_along(datetime)){
if(i<=n){
val[i] <- NA
}
else{
val[i] <- mean(values[(i-n):(i+n)])
}
}
return(data_frame(datetime,val))
}
mav(oneday$datetime,oneday$axis1,n=7) %>% plot(type="l")
mav(oneday$datetime,oneday$axis1,n=7) %>% plot(type="l", lwd=2)
mtcars
mtcars %>% group_by(cyl,am) %>%
summarise(count = n())
counts <- mtcars %>% group_by(cyl,am) %>%
summarise(count = n())
qplot(factor(cyl), data=mtcars, geom="bar", fill=factor(cyl))
qplot(factor(cyl), data=mtcars, geom="bar", fill=factor(am))
qplot(data=mtcars,wt,mpg)
qplot(data=mtcars,wt,mpg,color=cyl)
qplot(data=mtcars,wt,mpg,color=as.factor(cyl))
str(mtcars)
qplot(data=mtcars, wt, mpg, color=as.factor(cyl), size = hp)
qplot(data=mtcars, wt, mpg, color=as.factor(cyl), size = hp, shape = am )
qplot(data=mtcars, wt, mpg, color=as.factor(cyl), size = hp, shape = as.factor(am) )
qplot(data=mtcars, wt, mpg, color=as.factor(cyl), shape = as.factor(am) )
