library(devtools)
install_github("slidify","ramnathv")
install_github("slidifyLibraries","ramnathv")
library(slidify)
setwd("./R_lectures")
setwd("./R_lectures/1. Intro to R")
getwd()
setwd("./R_lectures/1. Intro to R")
dir()
setwd("./R_lectures/1. Intro to R")
setwd("./R_lectures/1 Intro to R")
dir()
setwd("./R_lectures/1_ Intro_to_R")
getwd()
dir()
setwd("./R_lectures/1_Intro_to_R")
setwd("./R_lectures/1_Intro_to_R")
setwd("./R_lectures/1")
setwd("./1 - Intro to R")
getwd
getwd()
setwd("./1 - Intro to R")
getwd()
author("1 - Intro to R")
dir()
setwd("./R_lectures")
author("1 - Intro to R")
library(slidify)
author("1 - Intro to R")
detach("package:slidify", unload=TRUE)
library("slidify", lib.loc="~/R/win-library/3.2")
library(slidify)
library(slidifyLibraries)
library("slidify", lib.loc="~/R/win-library/3.2")
detach("package:slidifyLibraries", unload=TRUE)
detach("package:slidify", unload=TRUE)
library("slidify", lib.loc="~/R/win-library/3.2")
library("slidifyLibraries", lib.loc="~/R/win-library/3.2")
detach("package:slidifyLibraries", unload=TRUE)
detach("package:slidify", unload=TRUE)
library("slidify", lib.loc="~/R/win-library/3.2")
library("slidifyLibraries", lib.loc="~/R/win-library/3.2")
detach("package:slidify", unload=TRUE)
detach("package:slidifyLibraries", unload=TRUE)
install_github("slidifyLibraries","ramnathv")
library(devtools)
install_github("slidifyLibraries","ramnathv")
library("slidifyLibraries", lib.loc="~/R/win-library/3.2")
detach("package:slidifyLibraries", unload=TRUE)
remove.packages("slidifyLibraries", lib="~/R/win-library/3.2")
install_github("slidifyLibraries","ramnathv")
library(slidify)
library(slidifyLibraries)
detach("package:slidify", unload=TRUE)
library("slidify", lib.loc="~/R/win-library/3.2")
library(slidifyLibraries)
library("slidify", lib.loc="~/R/win-library/3.2")
library("slidifyLibraries", lib.loc="~/R/win-library/3.2")
library(rmarkdown)
library(knitr)
is.integer(c(1,2,3))
as.integer(c(1,2,3))
c(FALSE,1,2)
x <- list(5:9,b,a,c, list("four","five"))
1 == "1"
"1" == TRUE
as.logical("1")
c(a = 1, b = 2, c = 3)
a <- matrix(1:12,ncol=4, nrow=3)
a
a:h
rownames(a)
colnames(a)
rownames(a) <- c("A","B","C")
colnames(a) <- c("a","b","c","d")
a
str(a)
library(devtools)
library(slidify)
library(slidifyLibraries)
library(rmarkdown)
library(knitr)
setwd("./R_lectures")
author("2 - Subsetting")
author("1 - Intro to R - Data Structures")
dir()
library(knitr)
opts_chunk$set(cache=TRUE, collapse=TRUE, error=FALSE, prompt=TRUE)
knit_theme$set(thm)
thm <- knit_theme$get("acid")
thm <- knit_theme$get("acid")
library(knitr)
# This sets the chunk default options
opts_chunk$set(cache=TRUE, collapse=TRUE, error=FALSE, prompt=TRUE)
# This sets the chunk display theme
thm <- knit_theme$get("acid")
knit_theme$set(thm)
options(digits=3)
options(width=80)
x[c(-2,4)]
x <- c(2.1, 4.2, 3.3, 5.4)
x[c(-2,4)]
x <- list(a=c(5:9),b=c(TRUE,FALSE,FALSE,TRUE), c=list("four","five"))
x
x[2]
x["b"]
class(x[1])
class(x["a"])
class(x$a)
df <- data.frame(ID = 1:4,
Color = c("red","white","red",NA),
Passed = c(T,T,T,F))
str(df)
df[c("ID","Color")]
str(df[c("ID","Color")])
str(df[c(,"ID","Color")])
str(df[c(,"ID","Color")])
str(df[,c("ID","Color")])
str(df[,c("ID","Color)])
str(df[,c("ID")])
str(df[c("ID")])
mtcars
mtcars[mtcars$cyl = 4, ]
author("3 - Control structures")
library(slidify)
library(slidifyLibraries)
library(rmarkdown)
library(knitr)
author("3 - Control structures")
author("4 - User-written functions")
library(slidify)
library(slidifyLibraries)
library(rmarkdown)
library(knitr)
setwd("./R_lectures")
author("4 - User-written functions")
author("3 - Control structures")
getwd()
install.packages("rCharts")
